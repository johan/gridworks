// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gridworks.proto

package com.metaweb.gridworks.data;

public final class Model {
  private Model() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Expression extends
      com.google.protobuf.GeneratedMessage {
    // Use Expression.newBuilder() to construct.
    private Expression() {
      initFields();
    }
    private Expression(boolean noInit) {}
    
    private static final Expression defaultInstance;
    public static Expression getDefaultInstance() {
      return defaultInstance;
    }
    
    public Expression getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_Expression_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_Expression_fieldAccessorTable;
    }
    
    // required string value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasValue()) {
        output.writeString(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.Expression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Expression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.metaweb.gridworks.data.Model.Expression prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.metaweb.gridworks.data.Model.Expression result;
      
      // Construct using com.metaweb.gridworks.data.Model.Expression.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.metaweb.gridworks.data.Model.Expression();
        return builder;
      }
      
      protected com.metaweb.gridworks.data.Model.Expression internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.metaweb.gridworks.data.Model.Expression();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.metaweb.gridworks.data.Model.Expression.getDescriptor();
      }
      
      public com.metaweb.gridworks.data.Model.Expression getDefaultInstanceForType() {
        return com.metaweb.gridworks.data.Model.Expression.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.metaweb.gridworks.data.Model.Expression build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.metaweb.gridworks.data.Model.Expression buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.metaweb.gridworks.data.Model.Expression buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.metaweb.gridworks.data.Model.Expression returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.metaweb.gridworks.data.Model.Expression) {
          return mergeFrom((com.metaweb.gridworks.data.Model.Expression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.metaweb.gridworks.data.Model.Expression other) {
        if (other == com.metaweb.gridworks.data.Model.Expression.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:gridworks.Expression)
    }
    
    static {
      defaultInstance = new Expression(true);
      com.metaweb.gridworks.data.Model.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:gridworks.Expression)
  }
  
  public static final class Project extends
      com.google.protobuf.GeneratedMessage {
    // Use Project.newBuilder() to construct.
    private Project() {
      initFields();
    }
    private Project(boolean noInit) {}
    
    private static final Project defaultInstance;
    public static Project getDefaultInstance() {
      return defaultInstance;
    }
    
    public Project getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_Project_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_Project_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required int64 created = 2;
    public static final int CREATED_FIELD_NUMBER = 2;
    private boolean hasCreated;
    private long created_ = 0L;
    public boolean hasCreated() { return hasCreated; }
    public long getCreated() { return created_; }
    
    // required int64 modified = 3;
    public static final int MODIFIED_FIELD_NUMBER = 3;
    private boolean hasModified;
    private long modified_ = 0L;
    public boolean hasModified() { return hasModified; }
    public long getModified() { return modified_; }
    
    // required string encoding = 4;
    public static final int ENCODING_FIELD_NUMBER = 4;
    private boolean hasEncoding;
    private java.lang.String encoding_ = "";
    public boolean hasEncoding() { return hasEncoding; }
    public java.lang.String getEncoding() { return encoding_; }
    
    // optional int32 encoding_confidence = 5;
    public static final int ENCODING_CONFIDENCE_FIELD_NUMBER = 5;
    private boolean hasEncodingConfidence;
    private int encodingConfidence_ = 0;
    public boolean hasEncodingConfidence() { return hasEncodingConfidence; }
    public int getEncodingConfidence() { return encodingConfidence_; }
    
    // optional string creator = 6;
    public static final int CREATOR_FIELD_NUMBER = 6;
    private boolean hasCreator;
    private java.lang.String creator_ = "";
    public boolean hasCreator() { return hasCreator; }
    public java.lang.String getCreator() { return creator_; }
    
    // optional string password = 7;
    public static final int PASSWORD_FIELD_NUMBER = 7;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public java.lang.String getPassword() { return password_; }
    
    // repeated .gridworks.Expression expression = 8;
    public static final int EXPRESSION_FIELD_NUMBER = 8;
    private java.util.List<com.metaweb.gridworks.data.Model.Expression> expression_ =
      java.util.Collections.emptyList();
    public java.util.List<com.metaweb.gridworks.data.Model.Expression> getExpressionList() {
      return expression_;
    }
    public int getExpressionCount() { return expression_.size(); }
    public com.metaweb.gridworks.data.Model.Expression getExpression(int index) {
      return expression_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasCreated) return false;
      if (!hasModified) return false;
      if (!hasEncoding) return false;
      for (com.metaweb.gridworks.data.Model.Expression element : getExpressionList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasCreated()) {
        output.writeInt64(2, getCreated());
      }
      if (hasModified()) {
        output.writeInt64(3, getModified());
      }
      if (hasEncoding()) {
        output.writeString(4, getEncoding());
      }
      if (hasEncodingConfidence()) {
        output.writeInt32(5, getEncodingConfidence());
      }
      if (hasCreator()) {
        output.writeString(6, getCreator());
      }
      if (hasPassword()) {
        output.writeString(7, getPassword());
      }
      for (com.metaweb.gridworks.data.Model.Expression element : getExpressionList()) {
        output.writeMessage(8, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasCreated()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getCreated());
      }
      if (hasModified()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getModified());
      }
      if (hasEncoding()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEncoding());
      }
      if (hasEncodingConfidence()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEncodingConfidence());
      }
      if (hasCreator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getCreator());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getPassword());
      }
      for (com.metaweb.gridworks.data.Model.Expression element : getExpressionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.Project parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.Project parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.metaweb.gridworks.data.Model.Project prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.metaweb.gridworks.data.Model.Project result;
      
      // Construct using com.metaweb.gridworks.data.Model.Project.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.metaweb.gridworks.data.Model.Project();
        return builder;
      }
      
      protected com.metaweb.gridworks.data.Model.Project internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.metaweb.gridworks.data.Model.Project();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.metaweb.gridworks.data.Model.Project.getDescriptor();
      }
      
      public com.metaweb.gridworks.data.Model.Project getDefaultInstanceForType() {
        return com.metaweb.gridworks.data.Model.Project.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.metaweb.gridworks.data.Model.Project build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.metaweb.gridworks.data.Model.Project buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.metaweb.gridworks.data.Model.Project buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.expression_ != java.util.Collections.EMPTY_LIST) {
          result.expression_ =
            java.util.Collections.unmodifiableList(result.expression_);
        }
        com.metaweb.gridworks.data.Model.Project returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.metaweb.gridworks.data.Model.Project) {
          return mergeFrom((com.metaweb.gridworks.data.Model.Project)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.metaweb.gridworks.data.Model.Project other) {
        if (other == com.metaweb.gridworks.data.Model.Project.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCreated()) {
          setCreated(other.getCreated());
        }
        if (other.hasModified()) {
          setModified(other.getModified());
        }
        if (other.hasEncoding()) {
          setEncoding(other.getEncoding());
        }
        if (other.hasEncodingConfidence()) {
          setEncodingConfidence(other.getEncodingConfidence());
        }
        if (other.hasCreator()) {
          setCreator(other.getCreator());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (!other.expression_.isEmpty()) {
          if (result.expression_.isEmpty()) {
            result.expression_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Expression>();
          }
          result.expression_.addAll(other.expression_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setCreated(input.readInt64());
              break;
            }
            case 24: {
              setModified(input.readInt64());
              break;
            }
            case 34: {
              setEncoding(input.readString());
              break;
            }
            case 40: {
              setEncodingConfidence(input.readInt32());
              break;
            }
            case 50: {
              setCreator(input.readString());
              break;
            }
            case 58: {
              setPassword(input.readString());
              break;
            }
            case 66: {
              com.metaweb.gridworks.data.Model.Expression.Builder subBuilder = com.metaweb.gridworks.data.Model.Expression.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addExpression(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required int64 created = 2;
      public boolean hasCreated() {
        return result.hasCreated();
      }
      public long getCreated() {
        return result.getCreated();
      }
      public Builder setCreated(long value) {
        result.hasCreated = true;
        result.created_ = value;
        return this;
      }
      public Builder clearCreated() {
        result.hasCreated = false;
        result.created_ = 0L;
        return this;
      }
      
      // required int64 modified = 3;
      public boolean hasModified() {
        return result.hasModified();
      }
      public long getModified() {
        return result.getModified();
      }
      public Builder setModified(long value) {
        result.hasModified = true;
        result.modified_ = value;
        return this;
      }
      public Builder clearModified() {
        result.hasModified = false;
        result.modified_ = 0L;
        return this;
      }
      
      // required string encoding = 4;
      public boolean hasEncoding() {
        return result.hasEncoding();
      }
      public java.lang.String getEncoding() {
        return result.getEncoding();
      }
      public Builder setEncoding(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEncoding = true;
        result.encoding_ = value;
        return this;
      }
      public Builder clearEncoding() {
        result.hasEncoding = false;
        result.encoding_ = getDefaultInstance().getEncoding();
        return this;
      }
      
      // optional int32 encoding_confidence = 5;
      public boolean hasEncodingConfidence() {
        return result.hasEncodingConfidence();
      }
      public int getEncodingConfidence() {
        return result.getEncodingConfidence();
      }
      public Builder setEncodingConfidence(int value) {
        result.hasEncodingConfidence = true;
        result.encodingConfidence_ = value;
        return this;
      }
      public Builder clearEncodingConfidence() {
        result.hasEncodingConfidence = false;
        result.encodingConfidence_ = 0;
        return this;
      }
      
      // optional string creator = 6;
      public boolean hasCreator() {
        return result.hasCreator();
      }
      public java.lang.String getCreator() {
        return result.getCreator();
      }
      public Builder setCreator(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder clearCreator() {
        result.hasCreator = false;
        result.creator_ = getDefaultInstance().getCreator();
        return this;
      }
      
      // optional string password = 7;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public java.lang.String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // repeated .gridworks.Expression expression = 8;
      public java.util.List<com.metaweb.gridworks.data.Model.Expression> getExpressionList() {
        return java.util.Collections.unmodifiableList(result.expression_);
      }
      public int getExpressionCount() {
        return result.getExpressionCount();
      }
      public com.metaweb.gridworks.data.Model.Expression getExpression(int index) {
        return result.getExpression(index);
      }
      public Builder setExpression(int index, com.metaweb.gridworks.data.Model.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.expression_.set(index, value);
        return this;
      }
      public Builder setExpression(int index, com.metaweb.gridworks.data.Model.Expression.Builder builderForValue) {
        result.expression_.set(index, builderForValue.build());
        return this;
      }
      public Builder addExpression(com.metaweb.gridworks.data.Model.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Expression>();
        }
        result.expression_.add(value);
        return this;
      }
      public Builder addExpression(com.metaweb.gridworks.data.Model.Expression.Builder builderForValue) {
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Expression>();
        }
        result.expression_.add(builderForValue.build());
        return this;
      }
      public Builder addAllExpression(
          java.lang.Iterable<? extends com.metaweb.gridworks.data.Model.Expression> values) {
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Expression>();
        }
        super.addAll(values, result.expression_);
        return this;
      }
      public Builder clearExpression() {
        result.expression_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:gridworks.Project)
    }
    
    static {
      defaultInstance = new Project(true);
      com.metaweb.gridworks.data.Model.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:gridworks.Project)
  }
  
  public static final class ProjectManager extends
      com.google.protobuf.GeneratedMessage {
    // Use ProjectManager.newBuilder() to construct.
    private ProjectManager() {
      initFields();
    }
    private ProjectManager(boolean noInit) {}
    
    private static final ProjectManager defaultInstance;
    public static ProjectManager getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProjectManager getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_ProjectManager_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.metaweb.gridworks.data.Model.internal_static_gridworks_ProjectManager_fieldAccessorTable;
    }
    
    // repeated .gridworks.Project projects = 1;
    public static final int PROJECTS_FIELD_NUMBER = 1;
    private java.util.List<com.metaweb.gridworks.data.Model.Project> projects_ =
      java.util.Collections.emptyList();
    public java.util.List<com.metaweb.gridworks.data.Model.Project> getProjectsList() {
      return projects_;
    }
    public int getProjectsCount() { return projects_.size(); }
    public com.metaweb.gridworks.data.Model.Project getProjects(int index) {
      return projects_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.metaweb.gridworks.data.Model.Project element : getProjectsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.metaweb.gridworks.data.Model.Project element : getProjectsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.metaweb.gridworks.data.Model.Project element : getProjectsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.metaweb.gridworks.data.Model.ProjectManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.metaweb.gridworks.data.Model.ProjectManager prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.metaweb.gridworks.data.Model.ProjectManager result;
      
      // Construct using com.metaweb.gridworks.data.Model.ProjectManager.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.metaweb.gridworks.data.Model.ProjectManager();
        return builder;
      }
      
      protected com.metaweb.gridworks.data.Model.ProjectManager internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.metaweb.gridworks.data.Model.ProjectManager();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.metaweb.gridworks.data.Model.ProjectManager.getDescriptor();
      }
      
      public com.metaweb.gridworks.data.Model.ProjectManager getDefaultInstanceForType() {
        return com.metaweb.gridworks.data.Model.ProjectManager.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.metaweb.gridworks.data.Model.ProjectManager build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.metaweb.gridworks.data.Model.ProjectManager buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.metaweb.gridworks.data.Model.ProjectManager buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.projects_ != java.util.Collections.EMPTY_LIST) {
          result.projects_ =
            java.util.Collections.unmodifiableList(result.projects_);
        }
        com.metaweb.gridworks.data.Model.ProjectManager returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.metaweb.gridworks.data.Model.ProjectManager) {
          return mergeFrom((com.metaweb.gridworks.data.Model.ProjectManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.metaweb.gridworks.data.Model.ProjectManager other) {
        if (other == com.metaweb.gridworks.data.Model.ProjectManager.getDefaultInstance()) return this;
        if (!other.projects_.isEmpty()) {
          if (result.projects_.isEmpty()) {
            result.projects_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Project>();
          }
          result.projects_.addAll(other.projects_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.metaweb.gridworks.data.Model.Project.Builder subBuilder = com.metaweb.gridworks.data.Model.Project.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProjects(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .gridworks.Project projects = 1;
      public java.util.List<com.metaweb.gridworks.data.Model.Project> getProjectsList() {
        return java.util.Collections.unmodifiableList(result.projects_);
      }
      public int getProjectsCount() {
        return result.getProjectsCount();
      }
      public com.metaweb.gridworks.data.Model.Project getProjects(int index) {
        return result.getProjects(index);
      }
      public Builder setProjects(int index, com.metaweb.gridworks.data.Model.Project value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.projects_.set(index, value);
        return this;
      }
      public Builder setProjects(int index, com.metaweb.gridworks.data.Model.Project.Builder builderForValue) {
        result.projects_.set(index, builderForValue.build());
        return this;
      }
      public Builder addProjects(com.metaweb.gridworks.data.Model.Project value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.projects_.isEmpty()) {
          result.projects_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Project>();
        }
        result.projects_.add(value);
        return this;
      }
      public Builder addProjects(com.metaweb.gridworks.data.Model.Project.Builder builderForValue) {
        if (result.projects_.isEmpty()) {
          result.projects_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Project>();
        }
        result.projects_.add(builderForValue.build());
        return this;
      }
      public Builder addAllProjects(
          java.lang.Iterable<? extends com.metaweb.gridworks.data.Model.Project> values) {
        if (result.projects_.isEmpty()) {
          result.projects_ = new java.util.ArrayList<com.metaweb.gridworks.data.Model.Project>();
        }
        super.addAll(values, result.projects_);
        return this;
      }
      public Builder clearProjects() {
        result.projects_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:gridworks.ProjectManager)
    }
    
    static {
      defaultInstance = new ProjectManager(true);
      com.metaweb.gridworks.data.Model.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:gridworks.ProjectManager)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gridworks_Expression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gridworks_Expression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gridworks_Project_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gridworks_Project_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gridworks_ProjectManager_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gridworks_ProjectManager_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017gridworks.proto\022\tgridworks\"\033\n\nExpressi" +
      "on\022\r\n\005value\030\001 \002(\t\"\267\001\n\007Project\022\014\n\004name\030\001 " +
      "\002(\t\022\017\n\007created\030\002 \002(\003\022\020\n\010modified\030\003 \002(\003\022\020" +
      "\n\010encoding\030\004 \002(\t\022\033\n\023encoding_confidence\030" +
      "\005 \001(\005\022\017\n\007creator\030\006 \001(\t\022\020\n\010password\030\007 \001(\t" +
      "\022)\n\nexpression\030\010 \003(\0132\025.gridworks.Express" +
      "ion\"6\n\016ProjectManager\022$\n\010projects\030\001 \003(\0132" +
      "\022.gridworks.ProjectB#\n\032com.metaweb.gridw" +
      "orks.dataB\005Model"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gridworks_Expression_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gridworks_Expression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gridworks_Expression_descriptor,
              new java.lang.String[] { "Value", },
              com.metaweb.gridworks.data.Model.Expression.class,
              com.metaweb.gridworks.data.Model.Expression.Builder.class);
          internal_static_gridworks_Project_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_gridworks_Project_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gridworks_Project_descriptor,
              new java.lang.String[] { "Name", "Created", "Modified", "Encoding", "EncodingConfidence", "Creator", "Password", "Expression", },
              com.metaweb.gridworks.data.Model.Project.class,
              com.metaweb.gridworks.data.Model.Project.Builder.class);
          internal_static_gridworks_ProjectManager_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_gridworks_ProjectManager_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gridworks_ProjectManager_descriptor,
              new java.lang.String[] { "Projects", },
              com.metaweb.gridworks.data.Model.ProjectManager.class,
              com.metaweb.gridworks.data.Model.ProjectManager.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
